/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Projeto1;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author Jeremias
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        vetfunc = new Vector();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlmenu = new javax.swing.JLabel();
        bntcadastrarfunc = new javax.swing.JButton();
        bntlistartodos = new javax.swing.JButton();
        bnttotalgasto = new javax.swing.JButton();
        bntpesquisarnome = new javax.swing.JButton();
        bntremoverfunc = new javax.swing.JButton();
        bntmediasal = new javax.swing.JButton();
        bntfuncmaiormenorsal = new javax.swing.JButton();
        bntsair = new javax.swing.JButton();
        bntgen = new javax.swing.JButton();
        btnordenar = new javax.swing.JButton();
        imagem = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jlmenu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlmenu.setText("MENU");

        bntcadastrarfunc.setText("Cadastrar Funcionário");
        bntcadastrarfunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntcadastrarfuncActionPerformed(evt);
            }
        });
        bntcadastrarfunc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bntcadastrarfuncKeyPressed(evt);
            }
        });

        bntlistartodos.setText("Listar todos os funcionários");
        bntlistartodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntlistartodosActionPerformed(evt);
            }
        });
        bntlistartodos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bntlistartodosKeyPressed(evt);
            }
        });

        bnttotalgasto.setText("Total gasto em salário");
        bnttotalgasto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnttotalgastoActionPerformed(evt);
            }
        });
        bnttotalgasto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bnttotalgastoKeyPressed(evt);
            }
        });

        bntpesquisarnome.setText("Pesquisar Funcionário");
        bntpesquisarnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntpesquisarnomeActionPerformed(evt);
            }
        });
        bntpesquisarnome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bntpesquisarnomeKeyPressed(evt);
            }
        });

        bntremoverfunc.setText("Deletar dados de um funcionário");
        bntremoverfunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntremoverfuncActionPerformed(evt);
            }
        });
        bntremoverfunc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bntremoverfuncKeyPressed(evt);
            }
        });

        bntmediasal.setText("Media salarial");
        bntmediasal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntmediasalActionPerformed(evt);
            }
        });
        bntmediasal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bntmediasalKeyPressed(evt);
            }
        });

        bntfuncmaiormenorsal.setText("Funcionários com maior e menor salário");
        bntfuncmaiormenorsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntfuncmaiormenorsalActionPerformed(evt);
            }
        });
        bntfuncmaiormenorsal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bntfuncmaiormenorsalKeyPressed(evt);
            }
        });

        bntsair.setText("Sair");
        bntsair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntsairActionPerformed(evt);
            }
        });
        bntsair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bntsairKeyPressed(evt);
            }
        });

        bntgen.setText("Gerar funcionários");
        bntgen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntgenActionPerformed(evt);
            }
        });
        bntgen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bntgenKeyPressed(evt);
            }
        });

        btnordenar.setText("Ordernar Registro");
        btnordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnordenarActionPerformed(evt);
            }
        });
        btnordenar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnordenarKeyPressed(evt);
            }
        });

        imagem.setIcon(new javax.swing.ImageIcon("C:\\Users\\Jeremias\\Downloads\\wolf-logo.jpg")); // NOI18N

        jLabel1.setText("Wolf Enterprise");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bntfuncmaiormenorsal)
                        .addGap(10, 10, 10)
                        .addComponent(bntgen, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bntmediasal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bnttotalgasto, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnordenar, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bntremoverfunc)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(imagem))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel1)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bntlistartodos, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bntpesquisarnome, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bntcadastrarfunc, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jlmenu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bntsair)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bntsair)
                            .addComponent(jlmenu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bntcadastrarfunc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bntlistartodos)
                        .addGap(17, 17, 17)
                        .addComponent(bntpesquisarnome))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(imagem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bnttotalgasto)
                            .addComponent(bntremoverfunc))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bntmediasal)
                            .addComponent(btnordenar))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bntfuncmaiormenorsal)
                            .addComponent(bntgen))))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntcadastrarfuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntcadastrarfuncActionPerformed
        this.hide();
        cadfunc = new Cadfunc(vetfunc);
        cadfunc.setVisible(true);
    }//GEN-LAST:event_bntcadastrarfuncActionPerformed

    private void bntlistartodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntlistartodosActionPerformed
        listarfunc = new ListarFunc(vetfunc, 1);
        this.hide();
        listarfunc.setVisible(true);
    }//GEN-LAST:event_bntlistartodosActionPerformed

    private void bntsairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntsairActionPerformed
        login = new Login();
        this.hide();
        login.setVetfunc(vetfunc);
        login.setVisible(true);
    }//GEN-LAST:event_bntsairActionPerformed

    private void bntcadastrarfuncKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bntcadastrarfuncKeyPressed
        this.hide();
        cadfunc = new Cadfunc(vetfunc);
        cadfunc.setVisible(true);
    }//GEN-LAST:event_bntcadastrarfuncKeyPressed

    private void bntlistartodosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bntlistartodosKeyPressed
        listarfunc = new ListarFunc(vetfunc, 1);
        this.hide();
        listarfunc.setVisible(true);
    }//GEN-LAST:event_bntlistartodosKeyPressed

    private void bntsairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bntsairKeyPressed
        login = new Login();
        this.hide();
        login.setVetfunc(vetfunc);
        login.setVisible(true);
    }//GEN-LAST:event_bntsairKeyPressed

    private void bntpesquisarnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntpesquisarnomeActionPerformed
        pesquisarnome = new PesquisarNome(vetfunc);
        this.hide();
        pesquisarnome.setVisible(true);
    }//GEN-LAST:event_bntpesquisarnomeActionPerformed

    private void bntpesquisarnomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bntpesquisarnomeKeyPressed
        pesquisarnome = new PesquisarNome(vetfunc);
        this.hide();
        pesquisarnome.setVisible(true);
    }//GEN-LAST:event_bntpesquisarnomeKeyPressed

    private void bntremoverfuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntremoverfuncActionPerformed
        removerfunc = new RemoverFunc(vetfunc);
        this.hide();
        removerfunc.setVisible(true);
    }//GEN-LAST:event_bntremoverfuncActionPerformed

    private void bntremoverfuncKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bntremoverfuncKeyPressed
        removerfunc = new RemoverFunc(vetfunc);
        this.hide();
        removerfunc.setVisible(true);
    }//GEN-LAST:event_bntremoverfuncKeyPressed

    private void bnttotalgastoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnttotalgastoActionPerformed
        String msg = "Total gasto em salários: R$" + calcularTotalGasto();
        JOptionPane.showMessageDialog(null, msg, "system", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_bnttotalgastoActionPerformed

    private void bnttotalgastoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bnttotalgastoKeyPressed
        String msg = "Total gasto em salários: R$" + calcularTotalGasto();
        JOptionPane.showMessageDialog(null, msg, "system", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_bnttotalgastoKeyPressed

    private void bntmediasalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntmediasalActionPerformed
        if (vetfunc.size() == 0) {
            String msg = "Nenhuma média salarial. Não existe funcionário cadastrado.";
            JOptionPane.showMessageDialog(null, msg, "system", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String msg = "Média salarial: R$" + (calcularTotalGasto() / vetfunc.size());
            JOptionPane.showMessageDialog(null, msg, "system", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_bntmediasalActionPerformed

    private void bntmediasalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bntmediasalKeyPressed
        if (vetfunc.size() == 0) {
            String msg = "Nenhuma média salarial. Não existe funcionário cadastrado.";
            JOptionPane.showMessageDialog(null, msg, "system", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String msg = "Média salarial: R$" + (calcularTotalGasto() / vetfunc.size());
            JOptionPane.showMessageDialog(null, msg, "system", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_bntmediasalKeyPressed

    private void bntfuncmaiormenorsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntfuncmaiormenorsalActionPerformed
        maiorMenorSal();
    }//GEN-LAST:event_bntfuncmaiormenorsalActionPerformed

    private void bntfuncmaiormenorsalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bntfuncmaiormenorsalKeyPressed
        maiorMenorSal();
    }//GEN-LAST:event_bntfuncmaiormenorsalKeyPressed

    private void bntgenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntgenActionPerformed
        initializeFuncs();
        randGenerateFunc();
        JOptionPane.showMessageDialog(null, "Registros gerados com sucesso!", "system", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_bntgenActionPerformed

    private void bntgenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bntgenKeyPressed
        initializeFuncs();
        randGenerateFunc();
        JOptionPane.showMessageDialog(null, "Registros gerados com sucesso!", "system", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_bntgenKeyPressed

    private void btnordenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnordenarActionPerformed
        try{
            quickSort(vetfunc, 0, vetfunc.size()-1);
            JOptionPane.showMessageDialog(null, "Ordenado por salário (qSort)", "system", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "O registro já está ordenado!", "system", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnordenarActionPerformed

    private void btnordenarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnordenarKeyPressed
        try{
            quickSort(vetfunc, 0, vetfunc.size()-1);
            JOptionPane.showMessageDialog(null, "Ordenado por salário (qSort)", "system", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "O registro já está ordenado!", "system", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnordenarKeyPressed

    private double calcularTotalGasto() {
        saltotal = 0;
        for (int i = 0; i < vetfunc.size(); i++) {
            funcionario = (Funcionario) vetfunc.elementAt(i);
            saltotal += funcionario.getSal();
        }
        return saltotal;
    }

    private void maiorMenorSal() {
        String msg = "";
        String msg1 = "";
        if (vetfunc.isEmpty()) {
            msg = "Nenhum funcionário foi cadastrado!";
            JOptionPane.showMessageDialog(null, msg, "system", JOptionPane.INFORMATION_MESSAGE);
        } else {
            funcionario = (Funcionario) vetfunc.elementAt(0);
            maiorSal = menorSal = funcionario.getSal();
            for (int i = 0; i < vetfunc.size(); i++) {
                funcionario = (Funcionario) vetfunc.elementAt(i);
                if (funcionario.getSal() >= maiorSal) {
                    msg = "Funcionário com maior salário\n";
                    msg += "Nome: " + funcionario.getNome() + "\n";
                    msg += "Cargo: " + funcionario.getCargo() + "\n";
                    msg += "Sal: R$" + funcionario.getSal() + "\n";
                    msg += "----------------------------------\n";
                }
                if (funcionario.getSal() <= menorSal) {
                    msg1 = "Funcionário com menor salário\n";
                    msg1 += "Nome: " + funcionario.getNome() + "\n";
                    msg1 += "Cargo: " + funcionario.getCargo() + "\n";
                    msg1 += "Sal: R$" + funcionario.getSal() + "\n";
                    msg1 += "----------------------------------\n";
                }
            }
            JOptionPane.showMessageDialog(null, msg + msg1, "system", JOptionPane.INFORMATION_MESSAGE);
        }

    }

    public Vector getVetfunc() {
        return vetfunc;
    }

    public void setVetfunc(Vector vetfunc) {
        this.vetfunc = vetfunc;
    }

    private void randGenerateFunc() {

        double salar;
        String carg = "", name = "", posname = "";
        for (int i = 0; i < 1000; ++i) {
            //df = new DecimalFormat("###,###,##0.00");
            salar = (int) (Math.random() * 145 + 970.21);
            name = (String) nomes.get((int) (Math.floor(Math.random() * 13)) % 13);
            posname = (String) sobrenome.get((int) (Math.floor(Math.random() * 13)) % 13);
            carg = (String) cargo.get((int) (Math.floor(Math.random() * 13)) % 13);
            vetfunc.add(new Funcionario(name + " " + posname, carg, salar));
        }
    }

    public void quickSort(Vector v, int esquerda, int direita) {
        int esq = esquerda;
        int dir = direita;
        Funcionario pivo = (Funcionario) v.get((esq + dir) / 2);
        
        Funcionario funcDir = (Funcionario) v.get(dir);
        Funcionario funcEsq = (Funcionario) v.get(esq);
        Funcionario funcTroca = new Funcionario();
        
        while (esq <= dir) {
            while (funcEsq.getSal() > pivo.getSal()) {
                esq = esq + 1;
                funcEsq = (Funcionario) v.get(esq);
            }
            while (funcDir.getSal() < pivo.getSal()) {
                dir = dir - 1;
                funcDir = (Funcionario) v.get(dir);
            }
            if (esq <= dir) {
                funcTroca = (Funcionario) v.get(esq);
                v.set(esq, v.get(dir));
                v.set(dir, funcTroca);
                esq = esq + 1;
                dir = dir - 1;
                funcDir = (Funcionario) v.get(dir);
                funcEsq = (Funcionario) v.get(esq);
            }
        }
        if (dir > esquerda) {
            quickSort(v, esquerda, dir);
        }
        if (esq < direita) {
            quickSort(v, esq, direita);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntcadastrarfunc;
    private javax.swing.JButton bntfuncmaiormenorsal;
    private javax.swing.JButton bntgen;
    private javax.swing.JButton bntlistartodos;
    private javax.swing.JButton bntmediasal;
    private javax.swing.JButton bntpesquisarnome;
    private javax.swing.JButton bntremoverfunc;
    private javax.swing.JButton bntsair;
    private javax.swing.JButton bnttotalgasto;
    private javax.swing.JButton btnordenar;
    private javax.swing.JLabel imagem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jlmenu;
    // End of variables declaration//GEN-END:variables

    // Formulários
    private Cadfunc cadfunc;
    private ListarFunc listarfunc;
    private PesquisarNome pesquisarnome;
    private RemoverFunc removerfunc;
    private Login login;

    private double maiorSal = 0;
    private double menorSal = 0;
    private double saltotal = 0;
//    private DecimalFormat df;

    private Vector vetfunc;
    private Funcionario funcionario;

    private ArrayList<String> nomes, sobrenome, cargo;

    void initializeFuncs() {
        nomes = new ArrayList<>();
        nomes.add("Joao");
        nomes.add("Aria");
        nomes.add("Pedro");
        nomes.add("Jere");
        nomes.add("Max");
        nomes.add("Ian");
        nomes.add("Diego");
        nomes.add("Armando");
        nomes.add("Alex");
        nomes.add("Joaquina");
        nomes.add("Fernanda");
        nomes.add("Amanda");
        nomes.add("Giselle");

        sobrenome = new ArrayList<>();
        sobrenome.add("Silver");
        sobrenome.add("Abreu");
        sobrenome.add("Lecalicus");
        sobrenome.add("Wayne");
        sobrenome.add("Stark");
        sobrenome.add("Parker");
        sobrenome.add("Targaryen");
        sobrenome.add("Schwarzenegger");
        sobrenome.add("Ganzer");
        sobrenome.add("Steel");
        sobrenome.add("Ribeiro");
        sobrenome.add("Gray");
        sobrenome.add("Noronha");

        cargo = new ArrayList<>();
        cargo.add("Professor(a)");
        cargo.add("Programador(a)");
        cargo.add("Mecânico(a)");
        cargo.add("Engenheiro(a)");
        cargo.add("Rei(Rainha) do Norte");
        cargo.add("Médico(a)");
        cargo.add("Caminhoneiro(a)");
        cargo.add("Vigia(a)");
        cargo.add("Super herói(na) nas horas vagas");
        cargo.add("Escritor(a)");
        cargo.add("Estudante(a)");
        cargo.add("Dono(a) de Cassino");
        cargo.add("Instrumentista");

    }

//    private Vector<String> nomes;
}
